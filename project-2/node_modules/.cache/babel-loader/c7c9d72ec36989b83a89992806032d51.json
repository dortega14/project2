{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revy\\\\project2\\\\project-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{loginTypes}from\"../action-mappers/login-actions\";var intialState={currUser:{userId:0,username:\"\",password:\"\",firstName:\"\",lastName:\"\",email:\"\"},loginMessage:\"\"};export var currUserReducer=function currUserReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:intialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case loginTypes.LOGIN_SUCCESS:{return _objectSpread({},state,{currUser:action.payload.currUser,loginMessage:\"Login Successful!\"});}case loginTypes.LOGIN_UNSUCCESS:{return _objectSpread({},state,{loginMessage:action.payload.loginMessage});}case loginTypes.LOGOUT:{return intialState;}default:return state;}};","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revy/project2/project-2/src/reducers/curr-user-reducer.ts"],"names":["loginTypes","intialState","currUser","userId","username","password","firstName","lastName","email","loginMessage","currUserReducer","state","action","type","LOGIN_SUCCESS","payload","LOGIN_UNSUCCESS","LOGOUT"],"mappings":"qJACA,OAASA,UAAT,KAA2B,iCAA3B,CAEA,GAAMC,CAAAA,WAA0B,CAAG,CAC/BC,QAAQ,CAAE,CACNC,MAAM,CAAE,CADF,CAENC,QAAQ,CAAE,EAFJ,CAGNC,QAAQ,CAAE,EAHJ,CAINC,SAAS,CAAE,EAJL,CAKNC,QAAQ,CAAE,EALJ,CAMNC,KAAK,CAAE,EAND,CADqB,CAS/BC,YAAY,CAAE,EATiB,CAAnC,CAYA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAqC,IAApCC,CAAAA,KAAoC,2DAA5BV,WAA4B,IAAfW,CAAAA,MAAe,2CAChE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKb,CAAAA,UAAU,CAACc,aAAhB,CAA+B,CAC3B,wBACOH,KADP,EAEIT,QAAQ,CAACU,MAAM,CAACG,OAAP,CAAeb,QAF5B,CAGIO,YAAY,CAAC,mBAHjB,GAKH,CACD,IAAKT,CAAAA,UAAU,CAACgB,eAAhB,CAAiC,CAC7B,wBACOL,KADP,EAEIF,YAAY,CAACG,MAAM,CAACG,OAAP,CAAeN,YAFhC,GAIH,CACD,IAAKT,CAAAA,UAAU,CAACiB,MAAhB,CAAwB,CACpB,MAAOhB,CAAAA,WAAP,CACH,CACD,QACI,MAAOU,CAAAA,KAAP,CAlBR,CAoBH,CArBM","sourcesContent":["import { ICurrUserState } from \".\";\r\nimport { loginTypes } from \"../action-mappers/login-actions\";\r\n\r\nconst intialState:ICurrUserState = {\r\n    currUser: {\r\n        userId: 0,\r\n        username: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\"\r\n    },\r\n    loginMessage: \"\"\r\n}\r\n\r\nexport const currUserReducer = (state = intialState, action:any) => {\r\n    switch (action.type) {\r\n        case loginTypes.LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                currUser:action.payload.currUser,\r\n                loginMessage:\"Login Successful!\"\r\n            };\r\n        }\r\n        case loginTypes.LOGIN_UNSUCCESS: {\r\n            return {\r\n                ...state,\r\n                loginMessage:action.payload.loginMessage\r\n            };\r\n        }\r\n        case loginTypes.LOGOUT: {\r\n            return intialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}