{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revature\\\\project2\\\\project-2\\\\src\\\\components\\\\post-card-component\\\\PostCardComponent.tsx\";\nimport React from \"react\";\nimport { CardBody, Card, CardText, CardSubtitle, CardTitle, Button, ButtonGroup, Form, Input, Row } from \"reactstrap\";\nimport { YTComponent } from \"../yt-component/YTComponent\";\nimport { hitLike } from \"../../utilities/api\";\nexport class PostCardComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateNewComment = event => {\n      this.setState({ ...this.state,\n        newComment: event.target.value\n      });\n    };\n\n    this.state = {\n      newComment: \"\"\n    };\n  }\n\n  cardTextBuilder() {\n    return `Ingredients:  ${this.props.post.ingredients}\\n\\r\n            Recipe:  ${this.props.post.recipe}\\n\\r\n            Submitted on: ${new Date(this.props.post.postSubmitted)} by ${this.props.post.postUser.firstName}`;\n  }\n\n  submitComment(event) {\n    event.preventDefault();\n    let comment = {\n      commentId: 0,\n      comment: this.state.newComment,\n      commentPost: this.props.post,\n      commentUser: this.props.currUser\n    };\n    console.log(\"submitted comment\");\n  }\n\n  submitLike(type) {\n    let like = {\n      likeUser: this.props.currUser,\n      likePost: this.props.post,\n      likeLikeType: {\n        likeTypeId: type,\n        likeType: type === 1 ? \"Tasty\" : type === 2 ? \"Looks good\" : \"Needs salt\"\n      }\n    };\n    hitLike(like);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.post.title), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.post.postCategory.category), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.cardTextBuilder())))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.submitLike(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Tasty\"), React.createElement(Button, {\n      color: \"warning\",\n      onClick: () => this.submitLike(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Looks Good\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.submitLike(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Needs Salt\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.post.postComment), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.submitComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"textarea\",\n      placeholder: \"What do you think about this dish?\",\n      value: this.state.newComment,\n      onChange: this.updateNewComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"submit\",\n      value: \"Leave Comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.post.postYtLink && React.createElement(YTComponent, {\n      youtubeLinks: this.props.post.postYtLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revature/project2/project-2/src/components/post-card-component/PostCardComponent.tsx"],"names":["React","CardBody","Card","CardText","CardSubtitle","CardTitle","Button","ButtonGroup","Form","Input","Row","YTComponent","hitLike","PostCardComponent","Component","constructor","props","updateNewComment","event","setState","state","newComment","target","value","cardTextBuilder","post","ingredients","recipe","Date","postSubmitted","postUser","firstName","submitComment","preventDefault","comment","commentId","commentPost","commentUser","currUser","console","log","submitLike","type","like","likeUser","likePost","likeLikeType","likeTypeId","likeType","render","title","postCategory","category","postComment","postYtLink"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent } from \"react\";\r\nimport {\r\n  CardBody,\r\n  Card,\r\n  CardText,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  CardImg,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  Input,\r\n  Row\r\n} from \"reactstrap\";\r\nimport { IPost } from \"../../model/IPost\";\r\nimport { YTComponent } from \"../yt-component/YTComponent\";\r\nimport { IYoutube } from \"../../model/IYoutube\";\r\nimport IUser from \"../../model/IUser\";\r\nimport { hitLike } from \"../../utilities/api\";\r\nimport { ILike } from \"../../model/ILike\";\r\nimport { IComment } from \"../../model/IComment\";\r\n\r\ninterface IPostProps {\r\n  post: IPost,\r\n  currUser: IUser,\r\n  parent: string\r\n}\r\n\r\ninterface IPostState {\r\n  newComment: string\r\n}\r\n\r\nexport class PostCardComponent extends React.Component<IPostProps, IPostState> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {\r\n      newComment:\"\"\r\n    }\r\n  }\r\n\r\n  updateNewComment = (event:any) => {\r\n    this.setState({\r\n      ...this.state,\r\n      newComment:event.target.value\r\n    })\r\n  }\r\n\r\n  cardTextBuilder() {\r\n    return `Ingredients:  ${this.props.post.ingredients}\\n\\r\r\n            Recipe:  ${this.props.post.recipe}\\n\\r\r\n            Submitted on: ${new Date(this.props.post.postSubmitted)} by ${this.props.post.postUser.firstName}`;\r\n  }\r\n\r\n  submitComment(event:SyntheticEvent) {\r\n    event.preventDefault();\r\n    let comment:IComment = {\r\n      commentId:0,\r\n      comment: this.state.newComment,\r\n      commentPost: this.props.post,\r\n      commentUser: this.props.currUser\r\n    }\r\n    \r\n    console.log(\"submitted comment\");\r\n  }\r\n\r\n  submitLike(type:number) {\r\n    let like:ILike = {\r\n      likeUser: this.props.currUser,\r\n      likePost: this.props.post,\r\n      likeLikeType: {likeTypeId: type, likeType: (type===1?\"Tasty\":(type===2?\"Looks good\":\"Needs salt\"))}\r\n    };\r\n    hitLike(like);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Card>\r\n            {/*<CardImg>{() => this.props.post.image && this.props.post.image}</CardImg>*/}\r\n            <CardBody>\r\n              <CardTitle>{this.props.post.title}</CardTitle>\r\n              <CardSubtitle>\r\n                {this.props.post.postCategory.category}\r\n              </CardSubtitle>\r\n              <CardText>{this.cardTextBuilder()}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Row>\r\n        <Row>\r\n          <ButtonGroup>\r\n            <Button color=\"success\" onClick={() => this.submitLike(1)}>Tasty</Button>\r\n            <Button color=\"warning\" onClick={() => this.submitLike(2)}>Looks Good</Button>\r\n            <Button color=\"danger\" onClick={() => this.submitLike(3)}>Needs Salt</Button>\r\n          </ButtonGroup>\r\n        </Row>\r\n        <Row>\r\n          {this.props.post.postComment}\r\n        </Row>\r\n        <Row>\r\n          <Form onSubmit={this.submitComment}>\r\n            <Input\r\n              type=\"textarea\"\r\n              placeholder=\"What do you think about this dish?\"\r\n              value={this.state.newComment}\r\n              onChange={this.updateNewComment}\r\n            />\r\n            <Input type=\"submit\" value=\"Leave Comment\" />\r\n          </Form>\r\n        </Row>\r\n        <Row>\r\n          {this.props.post.postYtLink && (\r\n            <YTComponent youtubeLinks={this.props.post.postYtLink} />\r\n          )}\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}