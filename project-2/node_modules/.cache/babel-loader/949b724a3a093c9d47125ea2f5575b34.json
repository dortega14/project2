{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revy\\\\project2\\\\project-2\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revy\\\\project2\\\\project-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{getPersonalList}from\"../utilities/api\";export var postTypes={SUCCESSFUL_GET_PAGE_POSTS:'POST_SUCCESSFUL_GET_PAGE_POSTS',UNSUCCESSFUL_GET_PAGE_POSTS:'POST_UNSUCCESSFUL_GET_PAGE_POSTS'};export var getAllPosts=function getAllPosts(limit,offset,currUser){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var posts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getPersonalList(offset,limit,currUser);case 3:posts=_context.sent;dispatch({type:postTypes.SUCCESSFUL_GET_PAGE_POSTS,payload:{allPosts:posts.data}});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:postTypes.UNSUCCESSFUL_GET_PAGE_POSTS});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}());};","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revy/project2/project-2/src/action-mappers/post-actions.ts"],"names":["getPersonalList","postTypes","SUCCESSFUL_GET_PAGE_POSTS","UNSUCCESSFUL_GET_PAGE_POSTS","getAllPosts","limit","offset","currUser","dispatch","posts","type","payload","allPosts","data"],"mappings":"ySAAA,OAASA,eAAT,KAAgC,kBAAhC,CAIA,MAAO,IAAMC,CAAAA,SAAS,CAAG,CACrBC,yBAAyB,CAAE,gCADN,CAErBC,2BAA2B,CAAE,kCAFR,CAAlB,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAgBC,MAAhB,CAAgCC,QAAhC,kGAAoD,iBAAOC,QAAP,kKAEhDR,CAAAA,eAAe,CAACM,MAAD,CAASD,KAAT,CAAgBE,QAAhB,CAFiC,QAEnEE,KAFmE,eAIvED,QAAQ,CAAC,CACLE,IAAI,CAAET,SAAS,CAACC,yBADX,CAELS,OAAO,CAAC,CACJC,QAAQ,CAAEH,KAAK,CAACI,IADZ,CAFH,CAAD,CAAR,CAJuE,+EAWvEL,QAAQ,CAAC,CACLE,IAAI,CAACT,SAAS,CAACE,2BADV,CAAD,CAAR,CAXuE,oEAApD,iEAApB","sourcesContent":["import { getPersonalList } from \"../utilities/api\";\r\nimport { IPost } from \"../model/IPost\";\r\nimport IUser from \"../model/IUser\";\r\n\r\nexport const postTypes = {\r\n    SUCCESSFUL_GET_PAGE_POSTS: 'POST_SUCCESSFUL_GET_PAGE_POSTS',\r\n    UNSUCCESSFUL_GET_PAGE_POSTS: 'POST_UNSUCCESSFUL_GET_PAGE_POSTS'\r\n}\r\n\r\nexport const getAllPosts = (limit: number, offset: number, currUser: IUser) => async (dispatch: any) => {\r\n    try {\r\n        let posts: any = await getPersonalList(offset, limit, currUser);\r\n\r\n        dispatch({\r\n            type: postTypes.SUCCESSFUL_GET_PAGE_POSTS,\r\n            payload:{\r\n                allPosts: posts.data\r\n            }\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type:postTypes.UNSUCCESSFUL_GET_PAGE_POSTS\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}