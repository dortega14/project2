{"ast":null,"code":"import { getPersonalList } from \"../utilities/api\";\nexport const postTypes = {\n  SUCCESSFUL_GET_PAGE_POSTS: 'POST_SUCCESSFUL_GET_PAGE_POSTS',\n  UNSUCCESSFUL_GET_PAGE_POSTS: 'POST_UNSUCCESSFUL_GET_PAGE_POSTS'\n};\nexport const getAllPosts = (limit, offset, currUser) => async dispatch => {\n  try {\n    let posts = await getPersonalList(offset, limit, currUser);\n    dispatch({\n      type: postTypes.SUCCESSFUL_GET_PAGE_POSTS,\n      payload: {\n        allPosts: posts.data\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: postTypes.UNSUCCESSFUL_GET_PAGE_POSTS\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revy/project2/project-2/src/action-mappers/post-actions.ts"],"names":["getPersonalList","postTypes","SUCCESSFUL_GET_PAGE_POSTS","UNSUCCESSFUL_GET_PAGE_POSTS","getAllPosts","limit","offset","currUser","dispatch","posts","type","payload","allPosts","data","e"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AAIA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,yBAAyB,EAAE,gCADN;AAErBC,EAAAA,2BAA2B,EAAE;AAFR,CAAlB;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAgBC,MAAhB,EAAgCC,QAAhC,KAAoD,MAAOC,QAAP,IAAyB;AACpG,MAAI;AACA,QAAIC,KAAU,GAAG,MAAMT,eAAe,CAACM,MAAD,EAASD,KAAT,EAAgBE,QAAhB,CAAtC;AAEAC,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET,SAAS,CAACC,yBADX;AAELS,MAAAA,OAAO,EAAC;AACJC,QAAAA,QAAQ,EAAEH,KAAK,CAACI;AADZ;AAFH,KAAD,CAAR;AAMH,GATD,CASE,OAAOC,CAAP,EAAU;AACRN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACT,SAAS,CAACE;AADV,KAAD,CAAR;AAGH;AACJ,CAfM","sourcesContent":["import { getPersonalList } from \"../utilities/api\";\r\nimport { IPost } from \"../model/IPost\";\r\nimport IUser from \"../model/IUser\";\r\n\r\nexport const postTypes = {\r\n    SUCCESSFUL_GET_PAGE_POSTS: 'POST_SUCCESSFUL_GET_PAGE_POSTS',\r\n    UNSUCCESSFUL_GET_PAGE_POSTS: 'POST_UNSUCCESSFUL_GET_PAGE_POSTS'\r\n}\r\n\r\nexport const getAllPosts = (limit: number, offset: number, currUser: IUser) => async (dispatch: any) => {\r\n    try {\r\n        let posts: any = await getPersonalList(offset, limit, currUser);\r\n\r\n        dispatch({\r\n            type: postTypes.SUCCESSFUL_GET_PAGE_POSTS,\r\n            payload:{\r\n                allPosts: posts.data\r\n            }\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type:postTypes.UNSUCCESSFUL_GET_PAGE_POSTS\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}