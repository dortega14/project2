{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revy\\\\project2\\\\project-2\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revy\\\\project2\\\\project-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axiosConfig,{axiosConfg}from\"./axiosConfig\";export var getPersonalList=function getPersonalList(offset,limit,user){//return axiosConfig.get(\"list.app?o=\" + offset + \"&l=\" + limit + \"&u=\" + user.id);\nconsole.log(user);var PaginateReq={offset:offset,limit:limit,user:user};console.log(PaginateReq);//return axiosConfg.post(\"userpost.app\", PaginateReq);\nreturn axiosConfg.get(\"post\"+user.userId+\".app\");//return axios.get('https://api.myjson.com/bins/vpwds');\n//return axios.get('https://api.myjson.com/bins/1bxro8');\n};export var getList=function getList(offset,limit){var PaginateReq={offset:offset,limit:limit,user:{userId:0,username:\"\",password:\"\",firstName:\"\",lastName:\"\",email:\"\"}};return axiosConfg.get(\"postlist.app\");};export var publishPost=function publishPost(body){return axiosConfig.post('newpost.app',body);};export var authenticateUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(username,password){var credentials,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:credentials={username:username,password:password};//let response = await axios.get('https://api.myjson.com/bins/6amgk'/*, credentials*/);\n_context.next=3;return axiosConfg.post('login.app',credentials);case 3:response=_context.sent;console.log(response);return _context.abrupt(\"return\",response);case 6:case\"end\":return _context.stop();}}},_callee);}));return function authenticateUser(_x,_x2){return _ref.apply(this,arguments);};}();export var hitLike=function hitLike(body){return axiosConfig.post('newlike.app',body);};export var postComment=function postComment(body){return axiosConfig.post('newcomm.app',body);};export var regUser=function regUser(body){return axiosConfg.post('/newuser.app',body);};export var getProfile=function getProfile(body){return axiosConfg.get('prof'+body.userId+'.app');};export var updateProfile=function updateProfile(body){return axiosConfg.post('newprof.app',body);};export var resetPassword=function resetPassword(body){return axiosConfg.post('reeee.app',body);};export var sendEmail=function sendEmail(body){console.log(body);return axiosConfg.post('recovery.app',body);};","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revy/project2/project-2/src/utilities/api.ts"],"names":["axiosConfig","axiosConfg","getPersonalList","offset","limit","user","console","log","PaginateReq","get","userId","getList","username","password","firstName","lastName","email","publishPost","body","post","authenticateUser","credentials","response","hitLike","postComment","regUser","getProfile","updateProfile","resetPassword","sendEmail"],"mappings":"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","sourcesContent":["import  axiosConfig, { axiosConfg }  from \"./axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { IPost } from \"../model/IPost\";\r\nimport { ILike } from \"../model/ILike\";\r\nimport { IComment } from \"../model/IComment\";\r\nimport IRegister from \"../model/IRegister\";\r\nimport IUser from \"../model/IUser\";\r\nimport { IProfile } from \"../model/IProfile\";\r\n\r\ninterface IReqBody {\r\n    offset: number,\r\n    limit: number,\r\n    user:IUser\r\n}\r\n\r\nexport const getPersonalList = (offset: number, limit: number, user: IUser) =>{\r\n    //return axiosConfig.get(\"list.app?o=\" + offset + \"&l=\" + limit + \"&u=\" + user.id);\r\n    console.log(user);\r\n\r\n    let PaginateReq:IReqBody = {\r\n        offset,\r\n        limit,\r\n        user\r\n    }\r\n\r\n    console.log(PaginateReq);\r\n\r\n    //return axiosConfg.post(\"userpost.app\", PaginateReq);\r\n\r\n    return axiosConfg.get(\"post\" + user.userId + \".app\");\r\n\r\n\r\n    //return axios.get('https://api.myjson.com/bins/vpwds');\r\n    //return axios.get('https://api.myjson.com/bins/1bxro8');\r\n}\r\n\r\nexport const getList = (offset: number, limit: number) => {\r\n    \r\n\r\n    let PaginateReq:IReqBody = {\r\n        offset,\r\n        limit,\r\n        user:{\r\n            userId:0,\r\n            username:\"\",\r\n            password:\"\",\r\n            firstName:\"\",\r\n            lastName:\"\",\r\n            email:\"\"\r\n        }\r\n    }\r\n\r\n    return axiosConfg.get(\"postlist.app\");\r\n}\r\n\r\nexport const publishPost = (body: IPost) => {\r\n    return axiosConfig.post('newpost.app',body);\r\n}\r\n\r\nexport const authenticateUser = async (username:string, password:string) => {\r\n    let credentials:IUser = {\r\n        username: username,\r\n        password: password\r\n    };\r\n\r\n    //let response = await axios.get('https://api.myjson.com/bins/6amgk'/*, credentials*/);\r\n\r\n    let response = await axiosConfg.post('login.app', credentials)\r\n    console.log(response);\r\n    return response;\r\n}\r\n\r\nexport const hitLike = (body: ILike) => {\r\n    return axiosConfig.post('newlike.app', body);\r\n}\r\n\r\nexport const postComment = (body: IComment) => {\r\n    return axiosConfig.post('newcomm.app', body);\r\n}\r\n\r\nexport const regUser = (body: IRegister) => {\r\n    return axiosConfg.post('/newuser.app', body);\r\n}\r\n\r\nexport const getProfile = (body: IUser) => {\r\n    return axiosConfg.get('prof' + body.userId + '.app');\r\n}\r\n\r\nexport const updateProfile = (body: IProfile) => {\r\n    return axiosConfg.post('newprof.app', body);\r\n}\r\n\r\nexport const resetPassword = (body: IUser) => {\r\n    return axiosConfg.post('reeee.app', body);\r\n}\r\n\r\nexport const sendEmail = (body: IUser) => {\r\n    console.log(body);\r\n    return axiosConfg.post('recovery.app', body);\r\n}"]},"metadata":{},"sourceType":"module"}