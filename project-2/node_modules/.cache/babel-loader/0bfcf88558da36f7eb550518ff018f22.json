{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _loadScript = require('load-script');\n\nvar _loadScript2 = _interopRequireDefault(_loadScript);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (emitter) {\n  /**\r\n   * A promise that is resolved when window.onYouTubeIframeAPIReady is called.\r\n   * The promise is resolved with a reference to window.YT object.\r\n   */\n  var iframeAPIReady = new Promise(function (resolve) {\n    if (window.YT && window.YT.Player && window.YT.Player instanceof Function) {\n      resolve(window.YT);\n      return;\n    } else {\n      var protocol = window.location.protocol === 'http:' ? 'http:' : 'https:';\n      (0, _loadScript2.default)(protocol + '//www.youtube.com/iframe_api', function (error) {\n        if (error) {\n          emitter.trigger('error', error);\n        }\n      });\n    }\n\n    var previous = window.onYouTubeIframeAPIReady; // The API will call this function when page has finished downloading\n    // the JavaScript for the player API.\n\n    window.onYouTubeIframeAPIReady = function () {\n      if (previous) {\n        previous();\n      }\n\n      resolve(window.YT);\n    };\n  });\n  return iframeAPIReady;\n};\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["E:/Documents/Revy/project2/project-2/node_modules/youtube-player/dist/loadYouTubeIframeApi.js"],"names":["Object","defineProperty","exports","value","_loadScript","require","_loadScript2","_interopRequireDefault","obj","__esModule","default","emitter","iframeAPIReady","Promise","resolve","window","YT","Player","Function","protocol","location","error","trigger","previous","onYouTubeIframeAPIReady","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACH,WAAD,CAAzC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/FN,OAAO,CAACQ,OAAR,GAAkB,UAAUC,OAAV,EAAmB;AACnC;;;;AAIA,MAAIC,cAAc,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClD,QAAIC,MAAM,CAACC,EAAP,IAAaD,MAAM,CAACC,EAAP,CAAUC,MAAvB,IAAiCF,MAAM,CAACC,EAAP,CAAUC,MAAV,YAA4BC,QAAjE,EAA2E;AACzEJ,MAAAA,OAAO,CAACC,MAAM,CAACC,EAAR,CAAP;AAEA;AACD,KAJD,MAIO;AACL,UAAIG,QAAQ,GAAGJ,MAAM,CAACK,QAAP,CAAgBD,QAAhB,KAA6B,OAA7B,GAAuC,OAAvC,GAAiD,QAAhE;AAEA,OAAC,GAAGb,YAAY,CAACI,OAAjB,EAA0BS,QAAQ,GAAG,8BAArC,EAAqE,UAAUE,KAAV,EAAiB;AACpF,YAAIA,KAAJ,EAAW;AACTV,UAAAA,OAAO,CAACW,OAAR,CAAgB,OAAhB,EAAyBD,KAAzB;AACD;AACF,OAJD;AAKD;;AAED,QAAIE,QAAQ,GAAGR,MAAM,CAACS,uBAAtB,CAfkD,CAiBlD;AACA;;AACAT,IAAAA,MAAM,CAACS,uBAAP,GAAiC,YAAY;AAC3C,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ;AACT;;AAEDT,MAAAA,OAAO,CAACC,MAAM,CAACC,EAAR,CAAP;AACD,KAND;AAOD,GA1BoB,CAArB;AA4BA,SAAOJ,cAAP;AACD,CAlCD;;AAoCAa,MAAM,CAACvB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _loadScript = require('load-script');\r\n\r\nvar _loadScript2 = _interopRequireDefault(_loadScript);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nexports.default = function (emitter) {\r\n  /**\r\n   * A promise that is resolved when window.onYouTubeIframeAPIReady is called.\r\n   * The promise is resolved with a reference to window.YT object.\r\n   */\r\n  var iframeAPIReady = new Promise(function (resolve) {\r\n    if (window.YT && window.YT.Player && window.YT.Player instanceof Function) {\r\n      resolve(window.YT);\r\n\r\n      return;\r\n    } else {\r\n      var protocol = window.location.protocol === 'http:' ? 'http:' : 'https:';\r\n\r\n      (0, _loadScript2.default)(protocol + '//www.youtube.com/iframe_api', function (error) {\r\n        if (error) {\r\n          emitter.trigger('error', error);\r\n        }\r\n      });\r\n    }\r\n\r\n    var previous = window.onYouTubeIframeAPIReady;\r\n\r\n    // The API will call this function when page has finished downloading\r\n    // the JavaScript for the player API.\r\n    window.onYouTubeIframeAPIReady = function () {\r\n      if (previous) {\r\n        previous();\r\n      }\r\n\r\n      resolve(window.YT);\r\n    };\r\n  });\r\n\r\n  return iframeAPIReady;\r\n};\r\n\r\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}