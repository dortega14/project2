{"ast":null,"code":"import { loginTypes } from \"../action-mappers/login-actions\";\nconst intialState = {\n  currUser: {\n    userId: 0,\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  },\n  loginMessage: \"\"\n};\nexport const currUserReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case loginTypes.LOGIN_SUCCESS:\n      {\n        return { ...state,\n          currUser: action.payload.currUser,\n          loginMessage: \"Login Successful!\"\n        };\n      }\n\n    case loginTypes.LOGIN_UNSUCCESS:\n      {\n        return { ...state,\n          loginMessage: action.payload.loginMessage\n        };\n      }\n\n    case loginTypes.LOGOUT:\n      {\n        return intialState;\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revature/project2/project-2/src/reducers/curr-user-reducer.ts"],"names":["loginTypes","intialState","currUser","userId","username","password","firstName","lastName","email","loginMessage","currUserReducer","state","action","type","LOGIN_SUCCESS","payload","LOGIN_UNSUCCESS","LOGOUT"],"mappings":"AACA,SAASA,UAAT,QAA2B,iCAA3B;AAEA,MAAMC,WAA0B,GAAG;AAC/BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,CADF;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,QAAQ,EAAE,EAHJ;AAINC,IAAAA,SAAS,EAAE,EAJL;AAKNC,IAAAA,QAAQ,EAAE,EALJ;AAMNC,IAAAA,KAAK,EAAE;AAND,GADqB;AAS/BC,EAAAA,YAAY,EAAE;AATiB,CAAnC;AAYA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGV,WAAT,EAAsBW,MAAtB,KAAqC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,UAAU,CAACc,aAAhB;AAA+B;AAC3B,eAAO,EACH,GAAGH,KADA;AAEHT,UAAAA,QAAQ,EAACU,MAAM,CAACG,OAAP,CAAeb,QAFrB;AAGHO,UAAAA,YAAY,EAAC;AAHV,SAAP;AAKH;;AACD,SAAKT,UAAU,CAACgB,eAAhB;AAAiC;AAC7B,eAAO,EACH,GAAGL,KADA;AAEHF,UAAAA,YAAY,EAACG,MAAM,CAACG,OAAP,CAAeN;AAFzB,SAAP;AAIH;;AACD,SAAKT,UAAU,CAACiB,MAAhB;AAAwB;AACpB,eAAOhB,WAAP;AACH;;AACD;AACI,aAAOU,KAAP;AAlBR;AAoBH,CArBM","sourcesContent":["import { ICurrUserState } from \".\";\r\nimport { loginTypes } from \"../action-mappers/login-actions\";\r\n\r\nconst intialState:ICurrUserState = {\r\n    currUser: {\r\n        userId: 0,\r\n        username: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\"\r\n    },\r\n    loginMessage: \"\"\r\n}\r\n\r\nexport const currUserReducer = (state = intialState, action:any) => {\r\n    switch (action.type) {\r\n        case loginTypes.LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                currUser:action.payload.currUser,\r\n                loginMessage:\"Login Successful!\"\r\n            };\r\n        }\r\n        case loginTypes.LOGIN_UNSUCCESS: {\r\n            return {\r\n                ...state,\r\n                loginMessage:action.payload.loginMessage\r\n            };\r\n        }\r\n        case loginTypes.LOGOUT: {\r\n            return intialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}