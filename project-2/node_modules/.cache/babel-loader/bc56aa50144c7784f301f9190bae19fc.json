{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revy\\\\project2\\\\project-2\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\palki\\\\OneDrive\\\\Documents\\\\Revy\\\\project2\\\\project-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{getList}from\"../utilities/api\";export var postTypes={SUCCESSFUL_GET_PAGE_POSTS:'MAIN_SUCCESSFUL_GET_PAGE_POSTS',UNSUCCESSFUL_GET_PAGE_POSTS:'MAIN_UNSUCCESSFUL_GET_PAGE_POSTS'};export var getAllPosts=function getAllPosts(limit,offset){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getList(offset,limit);case 2:response=_context.sent;_context.t0=response.status;_context.next=_context.t0===200?6:_context.t0===202?6:8;break;case 6:dispatch({type:postTypes.SUCCESSFUL_GET_PAGE_POSTS,payload:{allPosts:response.data}});return _context.abrupt(\"break\",9);case 8:dispatch({type:postTypes.UNSUCCESSFUL_GET_PAGE_POSTS});case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revy/project2/project-2/src/action-mappers/main-post-actions.ts"],"names":["getList","postTypes","SUCCESSFUL_GET_PAGE_POSTS","UNSUCCESSFUL_GET_PAGE_POSTS","getAllPosts","limit","offset","dispatch","response","status","type","payload","allPosts","data"],"mappings":"ySAAA,OAASA,OAAT,KAAwB,kBAAxB,CAGA,MAAO,IAAMC,CAAAA,SAAS,CAAG,CACrBC,yBAAyB,CAAE,gCADN,CAErBC,2BAA2B,CAAE,kCAFR,CAAlB,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAgBC,MAAhB,kGAAmC,iBAAOC,QAAP,qJAE5BP,CAAAA,OAAO,CAACM,MAAD,CAASD,KAAT,CAFqB,QAElDG,QAFkD,2BAGlDA,QAAQ,CAACC,MAHyC,6BAIjD,GAJiD,iBAKjD,GALiD,kBAMlDF,QAAQ,CAAC,CACLG,IAAI,CAAET,SAAS,CAACC,yBADX,CAELS,OAAO,CAAC,CACJC,QAAQ,CAAEJ,QAAQ,CAACK,IADf,CAFH,CAAD,CAAR,CANkD,yCAclDN,QAAQ,CAAC,CACLG,IAAI,CAACT,SAAS,CAACE,2BADV,CAAD,CAAR,CAdkD,sDAAnC,iEAApB","sourcesContent":["import { getList } from \"../utilities/api\";\r\nimport { IPost } from \"../model/IPost\";\r\n\r\nexport const postTypes = {\r\n    SUCCESSFUL_GET_PAGE_POSTS: 'MAIN_SUCCESSFUL_GET_PAGE_POSTS',\r\n    UNSUCCESSFUL_GET_PAGE_POSTS: 'MAIN_UNSUCCESSFUL_GET_PAGE_POSTS'\r\n}\r\n\r\nexport const getAllPosts = (limit: number, offset: number) => async (dispatch: any) => {\r\n\r\n        let response: any = await getList(offset, limit);\r\n    switch (response.status) {\r\n        case 200:\r\n        case 202: \r\n            dispatch({\r\n                type: postTypes.SUCCESSFUL_GET_PAGE_POSTS,\r\n                payload:{\r\n                    allPosts: response.data\r\n                }\r\n            });\r\n            break;\r\n        default:\r\n            dispatch({\r\n                type:postTypes.UNSUCCESSFUL_GET_PAGE_POSTS\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}