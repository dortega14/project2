{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _functionNames = require('./functionNames');\n\nvar _functionNames2 = _interopRequireDefault(_functionNames);\n\nvar _eventNames = require('./eventNames');\n\nvar _eventNames2 = _interopRequireDefault(_eventNames);\n\nvar _FunctionStateMap = require('./FunctionStateMap');\n\nvar _FunctionStateMap2 = _interopRequireDefault(_FunctionStateMap);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable promise/prefer-await-to-then */\n\n\nvar debug = (0, _debug2.default)('youtube-player');\nvar YouTubePlayer = {};\n/**\r\n * Construct an object that defines an event handler for all of the YouTube\r\n * player events. Proxy captured events through an event emitter.\r\n *\r\n * @todo Capture event parameters.\r\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\r\n */\n\nYouTubePlayer.proxyEvents = function (emitter) {\n  var events = {};\n\n  var _loop = function _loop(eventName) {\n    var onEventName = 'on' + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);\n\n    events[onEventName] = function (event) {\n      debug('event \"%s\"', onEventName, event);\n      emitter.trigger(eventName, event);\n    };\n  };\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _eventNames2.default[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var eventName = _step.value;\n\n      _loop(eventName);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return events;\n};\n/**\r\n * Delays player API method execution until player state is ready.\r\n *\r\n * @todo Proxy all of the methods using Object.keys.\r\n * @todo See TRICKY below.\r\n * @param playerAPIReady Promise that resolves when player is ready.\r\n * @param strictState A flag designating whether or not to wait for\r\n * an acceptable state when calling supported functions.\r\n * @returns {Object}\r\n */\n\n\nYouTubePlayer.promisifyPlayer = function (playerAPIReady) {\n  var strictState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var functions = {};\n\n  var _loop2 = function _loop2(functionName) {\n    if (strictState && _FunctionStateMap2.default[functionName]) {\n      functions[functionName] = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return playerAPIReady.then(function (player) {\n          var stateInfo = _FunctionStateMap2.default[functionName];\n          var playerState = player.getPlayerState(); // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n\n          var value = player[functionName].apply(player, args); // TRICKY: For functions like `seekTo`, a change in state must be\n          // triggered given that the resulting state could match the initial\n          // state.\n\n          if (stateInfo.stateChangeRequired || // eslint-disable-next-line no-extra-parens\n          Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerState) === -1) {\n            return new Promise(function (resolve) {\n              var onPlayerStateChange = function onPlayerStateChange() {\n                var playerStateAfterChange = player.getPlayerState();\n                var timeout = void 0;\n\n                if (typeof stateInfo.timeout === 'number') {\n                  timeout = setTimeout(function () {\n                    player.removeEventListener('onStateChange', onPlayerStateChange);\n                    resolve();\n                  }, stateInfo.timeout);\n                }\n\n                if (Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerStateAfterChange) !== -1) {\n                  player.removeEventListener('onStateChange', onPlayerStateChange);\n                  clearTimeout(timeout);\n                  resolve();\n                }\n              };\n\n              player.addEventListener('onStateChange', onPlayerStateChange);\n            }).then(function () {\n              return value;\n            });\n          }\n\n          return value;\n        });\n      };\n    } else {\n      functions[functionName] = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return playerAPIReady.then(function (player) {\n          // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n          return player[functionName].apply(player, args);\n        });\n      };\n    }\n  };\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = _functionNames2.default[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var functionName = _step2.value;\n\n      _loop2(functionName);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return functions;\n};\n\nexports.default = YouTubePlayer;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Users/palki/OneDrive/Documents/Revy/project2/project-2/node_modules/youtube-player/dist/YouTubePlayer.js"],"names":["Object","defineProperty","exports","value","_debug","require","_debug2","_interopRequireDefault","_functionNames","_functionNames2","_eventNames","_eventNames2","_FunctionStateMap","_FunctionStateMap2","obj","__esModule","default","debug","YouTubePlayer","proxyEvents","emitter","events","_loop","eventName","onEventName","slice","toUpperCase","event","trigger","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","err","return","promisifyPlayer","playerAPIReady","strictState","arguments","length","functions","_loop2","functionName","_len","args","Array","_key","then","player","stateInfo","playerState","getPlayerState","apply","stateChangeRequired","isArray","acceptableStates","indexOf","Promise","resolve","onPlayerStateChange","playerStateAfterChange","timeout","setTimeout","removeEventListener","clearTimeout","addEventListener","_len2","_key2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","module"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _debug = require('debug');\r\n\r\nvar _debug2 = _interopRequireDefault(_debug);\r\n\r\nvar _functionNames = require('./functionNames');\r\n\r\nvar _functionNames2 = _interopRequireDefault(_functionNames);\r\n\r\nvar _eventNames = require('./eventNames');\r\n\r\nvar _eventNames2 = _interopRequireDefault(_eventNames);\r\n\r\nvar _FunctionStateMap = require('./FunctionStateMap');\r\n\r\nvar _FunctionStateMap2 = _interopRequireDefault(_FunctionStateMap);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable promise/prefer-await-to-then */\r\n\r\nvar debug = (0, _debug2.default)('youtube-player');\r\n\r\nvar YouTubePlayer = {};\r\n\r\n/**\r\n * Construct an object that defines an event handler for all of the YouTube\r\n * player events. Proxy captured events through an event emitter.\r\n *\r\n * @todo Capture event parameters.\r\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\r\n */\r\nYouTubePlayer.proxyEvents = function (emitter) {\r\n  var events = {};\r\n\r\n  var _loop = function _loop(eventName) {\r\n    var onEventName = 'on' + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);\r\n\r\n    events[onEventName] = function (event) {\r\n      debug('event \"%s\"', onEventName, event);\r\n\r\n      emitter.trigger(eventName, event);\r\n    };\r\n  };\r\n\r\n  var _iteratorNormalCompletion = true;\r\n  var _didIteratorError = false;\r\n  var _iteratorError = undefined;\r\n\r\n  try {\r\n    for (var _iterator = _eventNames2.default[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\r\n      var eventName = _step.value;\r\n\r\n      _loop(eventName);\r\n    }\r\n  } catch (err) {\r\n    _didIteratorError = true;\r\n    _iteratorError = err;\r\n  } finally {\r\n    try {\r\n      if (!_iteratorNormalCompletion && _iterator.return) {\r\n        _iterator.return();\r\n      }\r\n    } finally {\r\n      if (_didIteratorError) {\r\n        throw _iteratorError;\r\n      }\r\n    }\r\n  }\r\n\r\n  return events;\r\n};\r\n\r\n/**\r\n * Delays player API method execution until player state is ready.\r\n *\r\n * @todo Proxy all of the methods using Object.keys.\r\n * @todo See TRICKY below.\r\n * @param playerAPIReady Promise that resolves when player is ready.\r\n * @param strictState A flag designating whether or not to wait for\r\n * an acceptable state when calling supported functions.\r\n * @returns {Object}\r\n */\r\nYouTubePlayer.promisifyPlayer = function (playerAPIReady) {\r\n  var strictState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n  var functions = {};\r\n\r\n  var _loop2 = function _loop2(functionName) {\r\n    if (strictState && _FunctionStateMap2.default[functionName]) {\r\n      functions[functionName] = function () {\r\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        return playerAPIReady.then(function (player) {\r\n          var stateInfo = _FunctionStateMap2.default[functionName];\r\n          var playerState = player.getPlayerState();\r\n\r\n          // eslint-disable-next-line no-warning-comments\r\n          // TODO: Just spread the args into the function once Babel is fixed:\r\n          // https://github.com/babel/babel/issues/4270\r\n          //\r\n          // eslint-disable-next-line prefer-spread\r\n          var value = player[functionName].apply(player, args);\r\n\r\n          // TRICKY: For functions like `seekTo`, a change in state must be\r\n          // triggered given that the resulting state could match the initial\r\n          // state.\r\n          if (stateInfo.stateChangeRequired ||\r\n\r\n          // eslint-disable-next-line no-extra-parens\r\n          Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerState) === -1) {\r\n            return new Promise(function (resolve) {\r\n              var onPlayerStateChange = function onPlayerStateChange() {\r\n                var playerStateAfterChange = player.getPlayerState();\r\n\r\n                var timeout = void 0;\r\n\r\n                if (typeof stateInfo.timeout === 'number') {\r\n                  timeout = setTimeout(function () {\r\n                    player.removeEventListener('onStateChange', onPlayerStateChange);\r\n\r\n                    resolve();\r\n                  }, stateInfo.timeout);\r\n                }\r\n\r\n                if (Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerStateAfterChange) !== -1) {\r\n                  player.removeEventListener('onStateChange', onPlayerStateChange);\r\n\r\n                  clearTimeout(timeout);\r\n\r\n                  resolve();\r\n                }\r\n              };\r\n\r\n              player.addEventListener('onStateChange', onPlayerStateChange);\r\n            }).then(function () {\r\n              return value;\r\n            });\r\n          }\r\n\r\n          return value;\r\n        });\r\n      };\r\n    } else {\r\n      functions[functionName] = function () {\r\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n          args[_key2] = arguments[_key2];\r\n        }\r\n\r\n        return playerAPIReady.then(function (player) {\r\n          // eslint-disable-next-line no-warning-comments\r\n          // TODO: Just spread the args into the function once Babel is fixed:\r\n          // https://github.com/babel/babel/issues/4270\r\n          //\r\n          // eslint-disable-next-line prefer-spread\r\n          return player[functionName].apply(player, args);\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  var _iteratorNormalCompletion2 = true;\r\n  var _didIteratorError2 = false;\r\n  var _iteratorError2 = undefined;\r\n\r\n  try {\r\n    for (var _iterator2 = _functionNames2.default[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\r\n      var functionName = _step2.value;\r\n\r\n      _loop2(functionName);\r\n    }\r\n  } catch (err) {\r\n    _didIteratorError2 = true;\r\n    _iteratorError2 = err;\r\n  } finally {\r\n    try {\r\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\r\n        _iterator2.return();\r\n      }\r\n    } finally {\r\n      if (_didIteratorError2) {\r\n        throw _iteratorError2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return functions;\r\n};\r\n\r\nexports.default = YouTubePlayer;\r\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}